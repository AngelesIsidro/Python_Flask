# Creación del entorno y despliegue de aplicación en Web Server

# Se prepara el LXC con los recursos básicos para poder ejecutar las tareas
apt update && apt upgrade -y
apt-get install net-tools openssh-server tar make gcc nano -y

# Se habilita el servicio de SSH para la conexión por PuTTy
systemctl start ssh
systemctl enable ssh
systemctl status ssh

# Se crea el usuario con permisos de sudo
adduser angsiserver
usermod aG sudo angsiserver

# Se instalan los entornos para desplegar la aplicación
sudo apt install apache2 mysql-server libapache2-mod-wsgi-py3 -y

# Se habilita el servicio de Apache Server
sudo systemctl start apache2
sudo systemctl enable apache2
sudo systemctl status apache2

# Se habilita el servicio MySQL Server
sudo systemctl start mysql
sudo systemctl enable mysql
sudo systemctl status mysql
sudo mysql_secure_installation

# Asignar una contraseña a MySQL
sudo mysql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '12345678';
FLUSH PRIVILEGES;
exit;

# Una vez asiganda la contraseña, se accede con el user root y se crea la BD
sudo mysql -u root -p
CREATE DATABASE IF NOT EXISTS sociodemografico;
EXIT;

# Se crea un usuario para el entorno de producción
sudo mysql -u root -p
CREATE USER 'angsiserver'@'localhost' IDENTIFIED BY '12345678';
GRANT ALL PRIVILEGES ON sociodemografico.* TO angsiserver@localhost;
FLUSH PRIVILEGES;
EXIT;

# Se descargan los archivos mediante un git clone desde el repositorio
# Link GitHub: https://github.com/AngelesIsidro/Pythonflask
sudo apt install git -y
git clone https...

# Ingresamos al directorio que contiene el archivo bash para poder ejecutarlo 
cd /Pythonflask/dbscripts
sudo chmod +x importar_scripts.sh
./importar_scripts.sh

# Se ingresa la contraseña, luego se verifica la importación
sudo mysql -u root -p
SHOW DATABASES;
USE sociodemografico;
SHOW TABLES;
SELECT * FROM estadoescolaridad;
EXIT;

# Movemos el proyecto a la ruta de Apache y accedemos a ella
sudo mv /Pythonflask/dash_project /var/www/
sudo cd /var/www/dash_project

# Se prepara el entorno para desplegar Flask y Pyhton
python3 --version
sudo apt install python3-pip -y
pip3 list

# Se instalan las siguientes dependencias para la creación de entornos virtuales
sudo apt install python3.8-venv python3-dev
pip3 install virtualenv

# Activamos el entorno virtual
python3 -m venv venv
source venv/bin/activate
pip3 install flask wheel dash
pip3 install -r requirements.txt
pip3 install mysql-connector-python

# Migramos la DB de MySQL a SQLite3, para un entorno de pruebas (opcional)
sudo mkdir db_project
cd /db_project
sqlite3 sociodemografico.db
pip3 install pandas sqlalchemy pymysql sqlite3
cd ..
sudo nano migrate.py
python3 migrate.py

# Ejecutamos la aplicación de Flask y probamos en el puerto 5000
python3 project.py

# Una vez ejecutada, realizamos el despliege mediante Apache
deactivate
cd /home/angsiserver/server_config
sudo cp run.wsgi /var/www/dash_project

# Nos movemos al directorio de Apache y realizamos un BackUp del archivo .conf
sudo cd /etc/apache2/sites-available/
sudo cp 000-default.conf buconf.conf

# Copiamos el contenido del "000-default.conf"
sudo nano 000-default.conf

# Verificamos que no haya errores en Apache y reinciamos el servicio
apachectl -t
sudo systemctl restart apache2
sudo systemctl status apache2
